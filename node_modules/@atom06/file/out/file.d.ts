/// <reference types="node" />
/**
 * A class for reading, writing, and appending data to a file.
 */
declare class IO {
    /**
     * The name of the file to read, write, or append to.
     */
    private fileName;
    /**
     * The encoding to use when reading, writing, or appending to the file.
     */
    private encoding;
    /**
     * Creates a new instance of the FileJS class.
     * @param fileName The name of the file to read, write, or append to.
     * @param encoding The encoding to use when reading, writing, or appending to the file.
     */
    constructor(fileName: string, encoding?: BufferEncoding);
    /**
     * Writes data to the file.
     * @param data The data to write to the file.
     * @returns A Promise that resolves to a tuple containing a boolean indicating whether the write was successful, and an error message if it failed.
     */
    write(data: string): Promise<[boolean, string | null]>;
    /**
     * Reads data from the file.
     * @returns A Promise that resolves to a tuple containing a boolean indicating whether the read was successful, and the data read from the file or an error message if it failed.
     */
    read(): Promise<[boolean, string | null]>;
    /**
     * Appends data to the file.
     * @param data The data to append to the file.
     * @returns A Promise that resolves to a tuple containing a boolean indicating whether the append was successful, and an error message if it failed.
     */
    append(data: string): Promise<[boolean, string | null]>;
}
export default IO;
